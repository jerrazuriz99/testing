# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import pytest
import src.clock_display as module_0


def test_case_0():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    clock_display_0 = module_0.ClockDisplay(dict_0)
    var_0 = clock_display_0.increment()


def test_case_1():
    tuple_0 = ()
    clock_display_0 = module_0.ClockDisplay(tuple_0)
    var_0 = clock_display_0.str()
    var_1 = clock_display_0.increment()


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    clock_display_0 = module_0.ClockDisplay(dict_0)
    var_0 = clock_display_0.increment()
    var_1 = clock_display_0.invariant()
    var_0.str()


def test_case_3():
    tuple_0 = ()
    clock_display_0 = module_0.ClockDisplay(tuple_0)


def test_case_4():
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    clock_display_0 = module_0.ClockDisplay(tuple_0)
    var_0 = clock_display_0.increment()
    var_1 = clock_display_0.str()
    assert var_1 == "00:00:00"


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    clock_display_0 = module_0.ClockDisplay(dict_0)
    var_0 = clock_display_0.clone()
    var_1 = clock_display_0.increment()
    tuple_0 = (var_1, var_1, bool_0)
    clock_display_1 = module_0.ClockDisplay(tuple_0)
    clock_display_1.increment()


def test_case_6():
    dict_0 = {}
    clock_display_0 = module_0.ClockDisplay(dict_0)
    var_0 = clock_display_0.invariant()
    tuple_0 = (var_0, var_0, var_0)
    clock_display_1 = module_0.ClockDisplay(tuple_0)
    var_1 = clock_display_1.increment()


@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"E\x0e\x97\xb3\x1b\xb8"
    clock_display_0 = module_0.ClockDisplay(bytes_0)
    var_0 = clock_display_0.increment()
    var_0.clone()


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    clock_display_0 = module_0.ClockDisplay(tuple_0)
    var_0 = clock_display_0.increment()


@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = True
    dict_0 = {}
    clock_display_0 = module_0.ClockDisplay(dict_0)
    var_0 = clock_display_0.invariant()
    tuple_0 = (var_0, var_0, bool_0)
    clock_display_1 = module_0.ClockDisplay(tuple_0)
    int_0 = -1787
    tuple_1 = (int_0, int_0, var_0)
    clock_display_2 = module_0.ClockDisplay(tuple_1)
    var_1 = clock_display_2.increment()
    var_1.str()
